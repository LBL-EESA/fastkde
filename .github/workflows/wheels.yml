# Based heavily off of scikit-hep's boost_histogram package's wheels workflow
# https://github.com/scikit-hep/boost-histogram/blob/develop/.github/workflows/wheels.yml
# Removed 32-bit builds.

name: Wheels

on:
  workflow_dispatch:
    inputs:
      overrideVersion:
        description: Manually force a version
  release:
    types:
      - published
  push:
    branches:
      - main


concurrency:
  group: wheels-${{ github.head_ref }}
  cancel-in-progress: true

env:
  SETUPTOOLS_SCM_PRETEND_VERSION: ${{ github.event.inputs.overrideVersion }}
  CIBW_ENVIRONMENT: "PIP_PREFER_BINARY=1"
  CIBW_TEST_EXTRAS: test
  CIBW_TEST_COMMAND: "pytest {project}/tests"
  CIBW_TEST_SKIP: "pp* *universal2:arm64 *musllinux*"
  CIBW_SKIP: "pp* cp36-*"

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Set version if needed
      if: github.event.inputs.overrideVersion
      run: echo "SETUPTOOLS_SCM_PRETEND_VERSION=${{ github.event.inputs.overrideVersion }}" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check --strict dist/*

    - uses: actions/upload-artifact@v4
      with:
        path: dist/*.tar.gz


  build_arch_wheels:
    name: ${{ matrix.python }}-${{ matrix.arch }}
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python: [39, 310, 311, 312, 313]
        arch: [aarch64]
    steps:

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Set version if needed
      if: github.event.inputs.overrideVersion
      shell: bash
      run: echo "SETUPTOOLS_SCM_PRETEND_VERSION=${{ github.event.inputs.overrideVersion }}" >> $GITHUB_ENV

    - uses: docker/setup-qemu-action@v3.0.0
      with:
        platforms: all

    - uses: pypa/cibuildwheel@v2.20
      env:
        CIBW_BUILD: cp${{ matrix.python }}-manylinux_*
        CIBW_ARCHS: ${{ matrix.arch }}

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: arch-wheels-${{ matrix.python }}-${{ matrix.arch }}
        path: wheelhouse/*.whl

  build_wheels:
    name: ${{ matrix.type }} ${{ matrix.arch }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        arch: [auto64]

        include:
          - os: macos-latest
            arch: arm64

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Set version if needed
      if: github.event.inputs.overrideVersion
      shell: bash
      run: echo "SETUPTOOLS_SCM_PRETEND_VERSION=${{ github.event.inputs.overrideVersion }}" >> $GITHUB_ENV

    - uses: pypa/cibuildwheel@v2.20
      env:
        CIBW_BUILD: ${{ matrix.build }}
        CIBW_ARCHS: ${{ matrix.arch }}

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.arch }}
        path: wheelhouse/*.whl

  upload_all:
    name: Upload if release
    needs: [build_wheels, build_arch_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: wheels-*
        merge-multiple: true
        path: dist

    - name: List all files
      run: ls -lh dist

    - uses: pypa/gh-action-pypi-publish@release/v1
      if: github.event_name == 'release' && github.event.action == 'published'
      with:
        password: ${{ secrets.pypi_password }}
